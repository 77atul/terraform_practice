---
name:
hosts:
gather_facts: false
vars:
  date: "{{ lookup('pipe', 'date +%d%m%Y') }}"
roles:
  - cyberark
tasks:
  - name: Call Rest Api
    uri:
      url: "https://"
      method: GET
      return_content: yes
    register: api_content

  - name: Print Output
    debug:
      msg: "{{api_content.json.status}}"

  - name: Validate
    uri:
      url: "{{  }}"
      validate_certs: no
    register: up_status

  - name: Debug status
    debug:
      msg: Health Success
    when: up_status.status == 200

  - name: Debug status
    debug:
      msg: Health Failed
    when: up_status.status != 200

  - name: Download Release
    get_url:
      url: "https:artifactory//443/{{ release_date }}/{{ release_file }}"
      dest: /tmp/Download
      url_username: "{{  }}"
      url_password: "{{  }}"
      force_basic_auth: yes
      validate_certs: false

  - name: Umcompress
    unarchive:
      src:
      dest:
      remote_src:
    register:
  

  - name: Install Nginx
    apt:
      name: nginx
      state: latest

  - name: install nginix
    apt:
      name: nginix
      state: latest

  - name: Enable Nginx
    service:
      name: nginx
      enabled: yes
    when: ansible_facts['os_family'] == ''

  - name: Deploy webpage
    copy:
      src: index.html
      dest: /var/www/html

  - name: Enable
    service:
      name:
      enabled: yes

------------------
---
- name: Install nginix then restart
  hosts: "{{  }}"
  gather_facts: true
  vars:
    redhat_packages
      - wget
      - abc
  roles:
    - cyberark
  tasks:
    - name: Install Redhat packages
      yum:
        name: "{{ item }}"
        state: present/latest
      loop: "{{ redhat_packages }}"
      when: ansible_facts['os_family'] == "Redhat"



    - name: Install nginix
      package/yum/apt:
        name: nginix
        state: present

    - name: Deploy .Config
      template:
        src:
        dest:
      notify: Restart nginix

  handlers:
    - name: Restart nginix
      service:
        name: nginix
        state: restarted

   

